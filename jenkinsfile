pipeline {
    agent{ label 'grad_spc' }
    triggers { pollSCM ('* * * * *') }
    parameters {
        choice(name: 'MAVEN_GOAL', choices: ['package', 'install', 'clean'], description: 'Maven Goal')
    }   
    stages {
        stage('vcs') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/archanaraj-m/dummyspring.git'        
            }
        }
        stage('Artifectory Configuration') {
            steps {
                rtServer (
                    id : "ARTIFACTORY_SERVER",
                    url: 'https://archanaraj123.jfrog.io/artifactory',
                    credentialsId: JFROG_ADMIN
                )
                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: 'libs-release',
                    snapshotRepo: 'libs-snapshot'
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: 'libs-release',
                    snapshotRepo: 'libs-snapshot'
                )
            }
        }
        stage('package') {
            tools {
                jdk 'JDK_17_UBUNTU'
            }
            steps {
                sh "mvn ${params.MAVEN_GOAL}"
                rtMavenRun (
                    tool: 'MAVEN_3.9_UBUNTU',
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: "MAVEN_DEPLOYER"

                )
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
                //sh "mvn ${params.MAVEN_GOAL}"
            }
        } 
    }      
        stage('post-build') {
            steps {
                archiveArtifacts artifacts: '**/target/spring-petclinic-3.0.0-SNAPSHOT.jar',
                                 onlyIfSuccessful: true
                junit testResults: '**/TEST-*.xml'
            }
        }    
}  

