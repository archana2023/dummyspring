pipeline {
    agent { label 'NEW_NODE' }
    triggers { pollSCM ('* * * * *') }
    parameters {
        choice(name: 'MAVEN_GOAL', choices: ['package', 'install', 'clean'], description: 'Maven Goal')
    }
    stages {
        stage('vcs') {
            steps {
                git url: 'https://github.com/archanaraj-m/dummyspring.git',
                    branch: 'sonardeclarative'
            }
        }
        stage('package') {
            tools {
                jdk 'JDK_17_UBUNTU'
            }
            steps {
                sh "./mvnw ${params.MAVEN_GOAL}"
            }
        }
        stage('sonar analysis') {
            steps {
                // performing sonarqube analysis with "withSonarQubeENV(<Name of Server configured in Jenkins>)"
                withSonarQubeEnv('sonar') {
                    sh ' /opt/maven/bin/mvn verify sonar:sonar -Dsonar.login=dd2ae8429ff2329725487f005646a76ef352ef2d -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=archanaraj-m -Dsonar.projectKey=archanaraj-m'
                }
            }
        }
        stage('post build') {
            steps {
                archiveArtifacts artifacts: '**/target/spring-petclinic-3.0.0-SNAPSHOT.jar',
                                 onlyIfSuccessful: true
                junit testResults: '**/surefire-reports/TEST-*.xml'
                sh mkdir -p "/tmp/${JOB_NAME}/${BUILD_ID}"
                CP "./target/spring-petclinic-3.0.0-SNAPSHOT.jar" "/tmp/${JOB_NAME}/${BUILD_ID}"
            }
        }
    }
}    
